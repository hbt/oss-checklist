
name: oss-checklist
tagline: open source software best practices. standards & compliance checklist

TODO: link website 
Check it out here: www.XXXX.com


What is it?

oss-checklist is a list of best practices in Open Source Software (OSS) inspired by producingoss.com 
It aims to change the state of OSS projects because "open source" does not stand for "code dump"
New and mature projects can use it as a reminder as to what the community expects from OSS projects.


Why build it?

Because most OSS projects lack important information. The README file often does not even include install / usage / features / requirements etc. 
OSS projects often go unnoticed and die due to poor communication. 
This project aims to change that by proving a clear checklist of items that maintainers can choose to document their OSS project.


How do I use it?

TODO: link website 
Check out the website XXXX.com and 



=========================================
Contributors:

We have a list of clear tasks that we need help with.
It is a more organized version of the issue manager. 

TODO: get involved wiki link
Check it out here


TODO: link to issue
Any questions/suggestions/comments/anything? log an issue here 



=========================================

Implemented features:
- website with checklist of best practices and includes examples from popular OSS projects


Mission: Improve the state of OSS projects by clearly identifying common best practices to facilitate development, communication, contributions and boost project quality.


Project Vision and future:
Stage 1:
    TODO: link website 
    - build checklist with examples XXXX.com
    - promote checklist on websites
Stage 2:
    - oss-quality-analysis
        software to analyze existing projects and evaluate the quality (based on items from the checklist). It should answer questions such as:
            - development status
                - recent activity
                    - how often it puts out new releases?
                    - is the project mature?
                    - how fast is it making progress?
                    - how do they handle bugs? do they respond? how active are the contributors? 
                    - how active is the project?
                    - analysis of issues, do they answer questions from users?
                        - should you bother logging issues or not because they ignore / close them without replying?
                - other items from checklist
            
    - oss-quality-analysis-dashboard 
        - promote the checklist + analysis software
        - allow user to show quality metrics easily from their project's homepage (mini image ala bitdeli with metrics). e.g rate at which tickets get addressed
Stage 3:
    build a template generator for oss to cover all aspects (license, hosting etc. using third party tools)
    This tool should allow someone to "open source" their code (or start a new project) from a template. Without reinventing the wheel, mashup of existing technologies to allow people to choose licenses, apply them to their code if needed, list of tools to upload tutorials (e.g ttyrecord or recordmydesktop), templates for README and documentation. If they seek contributors, how to organize their tasks, books, tutorials etc. 
    Not sure if a wiki is needed in addition to (or instead of) the template generator. 
    

Development status:

- Progress:
    Stage 1:
        building the checklist


Change log: 
    2014-06-21
        init and laying down vision


